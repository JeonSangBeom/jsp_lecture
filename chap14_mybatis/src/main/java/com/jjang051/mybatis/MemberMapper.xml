<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 우선 DOCTYPE 추가해 주기  -->
<mapper namespace="com.jjang051.mybatis.member">
	<select id="getAllMemberList" resultType="MemberDto" parameterType="HashMap">
	<!--id - select를 할때 이 아이디로 찾게 된다 resultType - 반환되는 값  -->
		SELECT * FROM 
			(SELECT ROWNUM AS NUM,B.* FROM 
				(SELECT * FROM MEMBER
					<if test="searchWord!=null and searchWord!=''" >
						WHERE ${searchSelect}  LIKE  '%'||#{searchWord}||'%'
						<!-- '%'||#{searchWord}||'%' 붙여 쓰기 띄워쓰면 공백이 들어간다  -->
					</if> 
					ORDER BY NO DESC
				) B
			) 
		WHERE NUM BETWEEN #{start} AND #{end}
	</select>
	<!-- 
		원래는 resultType에 class 전체 경로를 써야 하는데 com.jjang051.model.MemberDto
		번거러운 경우 TypeAlias(config에 정의해둔다(별명))를 통해 경로를 축약해서 쓸 수 있다.
		mybatis를 사용하는 이유는 sql 과 개발 분리를 목적 
	-->
	
	<!-- 하나만 뽑아오기 parameterType - 객체,String,Integer 사용 가능 -->
	<select id="getMemberSelectOne" resultType="MemberDto" parameterType="String"  >
		SELECT * FROM MEMBER WHERE ID = #{id}
	</select>
	<select id="getLoggedMember" resultType="MemberDto" parameterType="MemberDto">
		SELECT * FROM MEMBER WHERE ID = #{id} AND PASSWORD = #{password}
	</select>
	
	<!-- delete, update, insert는 따로 resultType이 없다 정수를 리턴해준다 -->
	<delete id="deleteMember" parameterType="MemberDto">
		DELETE FROM MEMBER WHERE ID = #{id} AND PASSWORD = #{password}
	</delete>
	
	<insert id="insertMember" parameterType="MemberDto">
		INSERT INTO MEMBER VALUES (SEQ_MEMBER.NEXTVAL,
								   #{id},
								   #{password},
								   #{name},
								   #{email},
								   #{phone},
								   #{zipCode},
								   #{address},
								   SYSDATE
		)
	</insert>
	<update id="updateMember" parameterType="MemberDto">
		UPDATE MEMBER SET NAME     =  #{name}, 
		                  EMAIL    =  #{email}, 
		                  PHONE    =  #{phone}, 
		                  ZIPCODE  =  #{zipCode},
		                  ADDRESS  =  #{address} 
		                  WHERE ID =  #{id} AND PASSWORD = #{password}
	</update>
	
	<select id="idCheck" parameterType="String" resultType="Integer">
		SELECT COUNT(*) FROM MEMBER WHERE ID = #{id}
	</select>
	<select id="getMemberTotal" resultType="Integer" parameterType="HashMap">
		SELECT COUNT(*) AS TOTAL FROM MEMBER
		<if test="searchWord!=null and searchWord!=''" >
			WHERE ${searchSelect}  LIKE  '%'||#{searchWord}||'%'
		</if> 
	</select>
</mapper>